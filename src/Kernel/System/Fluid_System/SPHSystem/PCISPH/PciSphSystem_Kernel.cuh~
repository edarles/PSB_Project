#ifndef _PCI_SPH_KERNEL_
#define _PCI_SPH_KERNEL_

#include <SphKernel.cuh>
#include <common.cuh>

extern "C" {

__device__ float fatomicMin(float *addr, float value);
__device__ float fatomicMax(float *addr, float value);

__global__ void compute_Density_PCI(uint nbBodies, double3* pos, double* mass, double* radius, 
			            double* density, double* restDensity, double* densityError, partVoisine voisines);

__global__ void compute_Pressure_PCI(uint nbBodies, double3* pos, double* mass, double* radius, double* k, double threshold, 
				     double* density, double* restDensity, double* densityError, 
			             double* pressure, partVoisine voisines, float dt);

__global__ void compute_Pressure_Force_PCI(uint nbBodies, double3* pos, double* mass, double* density, 
				           double* densityError, double* pressure, double* radius, double3* forcesPressure, 
				           double threshold, partVoisine voisines);


__global__ void compute_Viscosity_SurfaceTension_Force_PCI(uint nbBodies, double3* pos, double3* vel, double* mass, double* density,  
			       			      double* pressure, double* radius, double* viscosity, double* l, 
						      double* surfaceTension, double3* normales,
			       			      double3* forcePressure, double3* forceViscosity, double3* forceSurface, 
						      double3* forcesAccum, partVoisine voisines);

__global__ void restore_Pos_Vel_PCI(double3* restore_velInterAv, double3* restore_velInterAp, double3* restore_oldPos, 
			            double3* restore_newPos, double3* velInterAv, double3* velInterAp, double3* oldPos, 
				    double3* newPos, uint nbBodies);

__global__ void calculate_Dt_CFL(uint nbBodies, double* radius, double* viscosities,
			         double3* forcesViscosity, double3* forcesSurface, double3* forcesPressure, double3* forcesAccum,
				 double*  densities, float *dt);
}

#endif
