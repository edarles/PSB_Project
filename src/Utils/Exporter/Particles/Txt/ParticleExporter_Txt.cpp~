#include <ParticleExporter_Txt.h>
#include <stdio.h>
#include <typeinfo>

namespace Utils {

ParticleExporter_Txt::ParticleExporter_Txt():ParticleExporter()
{
}
ParticleExporter_Txt::~ParticleExporter_Txt()
{
}
void ParticleExporter_Txt::_export(const char* filename, System *S)
{
 FILE *f = fopen(filename,"w");
 if(f!=NULL && S!=NULL){
	if(typeid(*S) == typeid(SimpleSystem)){
		vector<Particle*> particles = S->getParticles();
		fprintf(f,"%d\n",particles.size());
		for(unsigned int i=0;i<particles.size();i++){
			Particle *p = particles[i];
			fprintf(f,"particle -p %f %f %f -v %f %f %f -m %f\n",p->getNewPos().x(),p->getNewPos().y(),p->getNewPos().z(),p->getNewVel().x(),p->getNewVel().y(),p->getNewVel().z(),p->getMass());
		}
		fclose(f);
	}
	if(typeid(*S) == typeid(SPHSystem)){
		SPHSystem *system = (SPHSystem*) S;
		unsigned int count = system->getParticles().size();
		fprintf(f,"SPH %d\n",count);
		for(unsigned int i=0;i<count;i++){
			fprintf(f,"-p %f %f %f -m %f -d %f\n", system->m_hPos[1][i*3], system->m_hPos[1][i*3+1], system->m_hPos[1][i*3+2], system->m_hMass[i], system->m_hDensity[i]);
		}
		fclose(f);
	}
  }
}

}
