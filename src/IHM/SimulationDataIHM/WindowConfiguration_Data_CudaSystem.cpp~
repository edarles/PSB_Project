#include <WindowConfiguration_Data_CudaSystem.h>

/*********************************************************************************************/
/*********************************************************************************************/
WindowConfiguration_Data_CudaSystem::WindowConfiguration_Data_CudaSystem(QWidget* widget):WindowConfiguration_Data(widget)
{
	particleRadiusLabel = new QLabel("Particle Radius",widget);
 	particleRadius = new QDoubleSpinBox(widget);
	particleRadius->setMinimum(0.01);
	particleRadius->setMaximum(1.0);
	particleRadius->setValue(0.02);
	connect(particleRadius, SIGNAL(valueChanged(double)), this, SLOT(changeData(double))); 

	particleMassLabel = new QLabel("Particle Mass",this);
 	particleMass = new QDoubleSpinBox(this);
	particleMass->setMinimum(0.01);
	particleMass->setMaximum(100.0);
	particleMass->setValue(1.0);
	connect(particleMass, SIGNAL(valueChanged(double)), this, SLOT(changeData(double))); 

	interactionRadiusLabel = new QLabel("Interaction radius",this);
 	interactionRadius = new QDoubleSpinBox(this);
	interactionRadius->setMinimum(0.01);
	interactionRadius->setMaximum(100.0);
	interactionRadius->setValue(0.2);
	connect(interactionRadius, SIGNAL(valueChanged(double)), this, SLOT(changeData(double))); 

	springLabel = new QLabel("Spring coefficient",this);
 	spring = new QDoubleSpinBox(this);
	spring->setMinimum(0.01);
	spring->setMaximum(100.0);
	spring->setValue(0.1);
	connect(spring, SIGNAL(valueChanged(double)), this, SLOT(changeData(double))); 

	dampingLabel = new QLabel("Damping coefficient",this);
 	damping = new QDoubleSpinBox(this);
	damping->setMinimum(0.01);
	damping->setMaximum(100.0);
	damping->setValue(0.1);
	connect(damping, SIGNAL(valueChanged(double)), this, SLOT(changeData(double))); 

	shearLabel = new QLabel("Shear coefficient",this);
 	shear = new QDoubleSpinBox(this);
	shear->setMinimum(0.01);
	shear->setMaximum(100.0);
	shear->setValue(0.0);
	connect(shear, SIGNAL(valueChanged(double)), this, SLOT(changeData(double))); 

	attractionLabel = new QLabel("Attraction coefficient",this);
 	attraction = new QDoubleSpinBox(this);
	attraction->setMinimum(0.01);
	attraction->setMaximum(100.0);
	attraction->setValue(0.0);
	connect(attraction, SIGNAL(valueChanged(double)), this, SLOT(changeData(double))); 

	colorButton = new QPushButton("Particles color",this);
	connect(colorButton, SIGNAL(pressed()),this, SLOT(setColor()));

	QVBoxLayout *layout1 = new QVBoxLayout();

	QGridLayout *grid1 = new QGridLayout();
	grid1->addWidget(particleRadiusLabel,0,0);
	grid1->addWidget(particleRadius,0,1); 
	layout1->addLayout(grid1);

	QGridLayout *grid2 = new QGridLayout();
	grid2->addWidget(particleMassLabel,0,0);
	grid2->addWidget(particleMass,0,1); 
	layout1->addLayout(grid2);

	QGridLayout *grid3 = new QGridLayout();
	grid3->addWidget(interactionRadiusLabel,0,0);
	grid3->addWidget(interactionRadius,0,1); 
	layout1->addLayout(grid3);

	QGridLayout *grid4 = new QGridLayout();
	grid4->addWidget(springLabel,0,0);
	grid4->addWidget(spring,0,1); 
	layout1->addLayout(grid4);

	QGridLayout *grid5 = new QGridLayout();
	grid5->addWidget(dampingLabel,0,0);
	grid5->addWidget(damping,0,1); 
	layout1->addLayout(grid5);

	QGridLayout *grid6 = new QGridLayout();
	grid6->addWidget(shearLabel,0,0);
	grid6->addWidget(shear,0,1); 
	layout1->addLayout(grid6);

	QGridLayout *grid7 = new QGridLayout();
	grid7->addWidget(attractionLabel,0,0);
	grid7->addWidget(attraction,0,1); 
	layout1->addLayout(grid7);

	QGridLayout *grid8 = new QGridLayout();
	grid8->addWidget(colorButton,0,0); 
	layout1->addLayout(grid8);

	widget->setLayout(layout1);
    
        color = QColor(255,0,255);
	data = new SimulationData_CudaSystem(particleRadius->value(),particleMass->value(),
		   Vector3(color.red()/255,color.green()/255,color.blue()/255),
		   interactionRadius->value(),spring->value(),damping->value(),shear->value(),attraction->value());
}
/*********************************************************************************************/
WindowConfiguration_Data_CudaSystem::~WindowConfiguration_Data_CudaSystem()
{
	delete(data);
}
/*********************************************************************************************/
/*********************************************************************************************/
void WindowConfiguration_Data_CudaSystem::changeData(double newValue)
{
	if(data!=NULL)	delete(data);
	data = new SimulationData_CudaSystem(particleRadius->value(),particleMass->value(),
		   Vector3(color.red()/255,color.green()/255,color.blue()/255),
		   interactionRadius->value(),spring->value(),damping->value(),shear->value(),attraction->value());
}
/*********************************************************************************************/
/*********************************************************************************************/
void WindowConfiguration_Data_CudaSystem::changeData(QColor newValue)
{
	if(data!=NULL)	delete(data);
	data = new SimulationData_CudaSystem(particleRadius->value(),particleMass->value(),
		   Vector3((double)(newValue.red()/255),(double)(newValue.green()/255),(double)(newValue.blue()/255)),
		   interactionRadius->value(),spring->value(),damping->value(),shear->value(),attraction->value());
}
/*********************************************************************************************/
/*********************************************************************************************/
void WindowConfiguration_Data_CudaSystem::setColor()
{
	QColorDialog *colorDialog = new QColorDialog();
	connect(colorDialog,SIGNAL(currentColorChanged(QColor)),this, SLOT(changeData(QColor)));
	colorDialog->open();
}
/*********************************************************************************************/
/*********************************************************************************************/
