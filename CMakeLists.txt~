cmake_minimum_required(VERSION 2.8)
project(PSB_Project)

set(CMAKE_CXX_COMPILER "/usr/bin/g++")
set(CMAKE_CC_COMPILER "/usr/bin/gcc")

SET(CUDA_TOOLKIT_ROOT_DIR /usr/local/cuda-5.0)
SET(CUDA_SDK_ROOT_DIR /usr/local/cuda-5.0)
SET(CUDA_INCLUDE_DIRS /usr/local/cuda-5.0/include)
SET(CUDA_CUDART_LIBRARY /usr/local/cuda-5.0/lib/libcudart.so)

find_package(Qt REQUIRED COMPONENTS QtCore QtGui QtOpenGL QtXml)
find_package(qglviewer-qt4 REQUIRED)
find_package(GLU REQUIRED)
find_package(GLee REQUIRED)
find_package(GLEW REQUIRED)
find_package(GLEWmx REQUIRED)
find_package(glut REQUIRED)
find_package(tinyxml REQUIRED)

link_directories(/usr/local/lib)
link_directories(/usr/lib)
link_directories(/usr/local/cuda-5.0/lib)

include_directories(/usr/include)
include_directories(/usr/local/include)
include_directories(/usr/include/qt4)
include_directories(/usr/include/qt4/QtCore)
include_directories(/usr/include/qt4/QtGui)
include_directories(/usr/include/qt4/QtOpenGL)
include_directories(/usr/include/qt4/QtXml)
include_directories(/usr/local/cuda-5.0/include)
include_directories(/usr/local/cuda-5.0/samples/common/inc/)
include_directories(dependencies/GLee-5.4.0-src)

INCLUDE(/usr/share/cmake-2.8/Modules/FindCUDA.cmake)
SET(CUDA_NVCC_FLAGS "-G -g -arch=sm_21")

set(CUDA_VERBOSE_BUILD OFF )
SET(CMAKE_VERBOSE_MAKEFILE OFF) 
FIND_PACKAGE (Qt4 REQUIRED)
ADD_DEFINITIONS (${QT_DEFINITIONS})
SET(QT_USE_QTXML TRUE )
SET(QT_USE_QTOPENGL TRUE )
SET(QT_WRAP_CPP TRUE )

include(${CMAKE_CURRENT_SOURCE_DIR}/src/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/Kernel/System/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/Kernel/ForcesExt/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/Kernel/Collision/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/Kernel/Emitters/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/Kernel/Surface/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/Utils/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/IHM/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/Extras/CMakeLists.txt)

set(PSB_LIBRARIES 
		${Qt_LIBRARIES} 
		${qglviewer-qt4_LIBRARIES} 
		${GLU_LIBRARIES} 
		${GLee_LIBRARIES} 
		${GLEW_LIBRARIES} 
		${GLEWmx_LIBRARIES} 
		${glut_LIBRARIES} 
		${tinyxml_LIBRARIES}
)

CUDA_COMPILE(CUDA_FILES_O ${COMMON_CUDA_FILES} 
			  ${SYSTEM_CUDA_FILES} 
			  ${FORCES_EXT_CUDA_FILES}
			  ${COLLISION_CUDA_FILES}
			  ${UTILS_CUDA_FILES} 
			  ${EXTRAS_CUDA_FILES}
)
CUDA_ADD_EXECUTABLE(bin/oldSPH ${SYSTEM_APP_SOURCES} 
			       ${FORCES_EXT_APP_SOURCES}
			       ${COLLISION_APP_SOURCES}
			       ${EMITTERS_APP_SOURCES}
			       ${SURFACE_APP_SOURCES}
			       ${UTILS_APP_SOURCES} 
			       ${IHM_APP_SOURCES}
			       ${IHM_MOC_FILES}
			       ${EXTRAS_APP_SOURCES} 
			       ${CUDA_FILES_O}
)

TARGET_LINK_LIBRARIES(bin/oldSPH ${PSB_LIBRARIES} ${CUDA_LIBRARIES})

message ( "CUDA_VERSION_STRING: " ${CUDA_VERSION_STRING} )
message ( "CUDA_TOOLKIT_ROOT_DIR: " ${CUDA_TOOLKIT_ROOT_DIR} )
message ( "CUDA_SDK_ROOT_DIR: " ${CUDA_SDK_ROOT_DIR} )
message ( "CUDA_INCLUDE_DIRS: " "${CUDA_INCLUDE_DIRS}" )
message ( "CUDA_LIBRARIES: " "${CUDA_LIBRARIES}" )
message ( "NVCC FLAGS: " "${CUDA_NVCC_FLAGS}" )
