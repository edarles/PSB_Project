cmake_minimum_required(VERSION 2.8)
project(PSB_Project)

set(CMAKE_C_COMPILER "/usr/bin/g++")
set(CMAKE_CXX_COMPILER "/usr/bin/g++")
set(CMAKE_CC_COMPILER "/usr/bin/g++")

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libstdc++") 
SET(CMAKE_CC_FLAGS "${CMAKE_CC_FLAGS} -stdlib=libstdc++") 

if ("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang") 
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -stdlib=libstdc++") 
	SET(CMAKE_CC_FLAGS "${CMAKE_CC_FLAGS} -stdlib=libstdc++") 
endif()
 
FIND_PACKAGE(CUDA REQUIRED)
SET(CUDA_NVCC_FLAGS "-arch=sm_30")
set(CUDA_VERBOSE_BUILD OFF )
SET(CMAKE_VERBOSE_MAKEFILE OFF) 

FIND_PACKAGE (Qt4 COMPONENTS QtCore QtXml QtOpenGL QtGui REQUIRED)
ADD_DEFINITIONS (${QT_DEFINITIONS})

FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(GLUT REQUIRED)
FIND_PACKAGE(GLEW REQUIRED)
#FIND_PACKAGE(GLEWMX REQUIRED)
#FIND_PACKAGE(GLEE REQUIRED)
FIND_PACKAGE(QGLViewer REQUIRED) 
find_package(TinyXML REQUIRED)

include_directories( ${CUDA_INCLUDE_DIRS})
include_directories( "/Developer/NVIDIA/CUDA-6.5/samples/common/inc")
include_directories( ${QT4_INCLUDE_DIRS} ${QT_QTCORE_INCLUDE_DIR} ${QT_QTGUI_INCLUDE_DIR} ${QT_QTXML_INCLUDE_DIR} ${QT_QTOPENGL_INCLUDE_DIR})
include_directories( ${QGLVIEWER_INCLUDE_DIR})
include_directories( ${GLEW_INCLUDE_DIR} ${OPENGL_INCLUDE_DIRS}  ${GLUT_INCLUDE_DIRS} )
include_directories( ${TINYXML_INCLUDE_DIR})

include(${CMAKE_CURRENT_SOURCE_DIR}/src/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/Kernel/System/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/Kernel/ForcesExt/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/Kernel/Collision/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/Kernel/Emitters/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/Kernel/Surface/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/Utils/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/IHM/CMakeLists.txt)
include(${CMAKE_CURRENT_SOURCE_DIR}/src/Extras/CMakeLists.txt)


CUDA_COMPILE(CUDA_FILES_O ${COMMON_CUDA_FILES} 
			  ${SYSTEM_CUDA_FILES} 
			  ${FORCES_EXT_CUDA_FILES}
			  ${COLLISION_CUDA_FILES}
			  ${UTILS_CUDA_FILES} 
			  ${EXTRAS_CUDA_FILES}
)

CUDA_ADD_EXECUTABLE(PSB ${SYSTEM_APP_SOURCES} 
			    ${FORCES_EXT_APP_SOURCES}
			    ${COLLISION_APP_SOURCES}
			    ${EMITTERS_APP_SOURCES}
			    ${SURFACE_APP_SOURCES}
			    ${UTILS_APP_SOURCES} 
			    ${IHM_APP_SOURCES}
			    ${IHM_MOC_FILES}
			    ${EXTRAS_APP_SOURCES} 
			    ${CUDA_FILES_O}

)
set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -lstdc++")
TARGET_LINK_LIBRARIES(PSB ${CUDA_LIBRARIES} ${QT4_LIBRARIES} ${QT_QTCORE_LIBRARIES} ${QT_QTGUI_LIBRARIES} ${QT_QTXML_LIBRARIES} ${QT_QTOPENGL_LIBRARIES} ${GLEW_LIBRARIES} ${OPENGL_LIBRARIES} ${GLUT_LIBRARIES} ${QGLVIEWER_LIBRARY} ${TINYXML_LIBRARIES} -lstdc++)

message ( "CUDA_VERSION_STRING: " ${CUDA_VERSION_STRING} )
message ( "CUDA_TOOLKIT_ROOT_DIR: " ${CUDA_TOOLKIT_ROOT_DIR} )
message ( "CUDA_SDK_ROOT_DIR: " ${CUDA_SDK_ROOT_DIR} )
message ( "CUDA_INCLUDE_DIRS: " "${CUDA_INCLUDE_DIRS}" )
message ( "CUDA_LIBRARIES: " "${CUDA_LIBRARIES}" )
message ( "NVCC FLAGS: " "${CUDA_NVCC_FLAGS}" )
